class MinStack {
    Stack<Integer> stack1;
    Stack<Integer> stack2;
    public MinStack() {
        stack2= new Stack<>();
        stack1=new Stack<>();
    }
    
    public void push(int val) {
        if(!stack2.isEmpty()){
            if(val<=stack2.peek()){
                stack2.push(val);
            stack1.push(val);}
            else{
                stack1.push(val);}
        }
        else{stack2.push(val);
        stack1.push(val);}
        
    }
    
    public void pop() {
        if(stack1.peek().equals(stack2.peek())){
           stack1.pop();
           stack2.pop();
        }
        else{stack1.pop();}
    }
    
    public int top() {
       return stack1.peek();
    }
    
    public int getMin() {
        int min=0;
        if(!stack2.isEmpty())
        { min= stack2.peek();}
        return min;
}
}
